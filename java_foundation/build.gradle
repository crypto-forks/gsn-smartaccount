buildscript {
//    ext.web3j_version = '4.3.0'
    ext.web3j_version = '4.3.2-SNAPSHOT'
    ext.junitVersion = "5.5.1"
    ext.kotlin_version = "1.3.41"
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.41"
    }
}

plugins {
    id 'java'
//    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
}

// from https://discuss.gradle.org/t/error-plugin-already-on-the-classpath-must-not-include-a-version/31814/3
def kotlinPluginId = 'org.jetbrains.kotlin.jvm'
final hasPlugin = project.getPlugins().hasPlugin(kotlinPluginId);
if (hasPlugin) {
    final Plugin plugin = project.getPlugins().getPlugin(kotlinPluginId)
    println 'Plugin already applied - version ' + plugin.properties['kotlinPluginVersion']
} else {
    apply plugin: "org.jetbrains.kotlin.jvm"
}
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

def coroutinesVersion = "1.3.0-M2"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.slf4j:slf4j-jdk14:1.7.25"

    compile ( "org.web3j:core:$web3j_version" ) {
        exclude group:"com.github.jnr"
        changing = true
    }

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
    testCompile "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
//    compile( "org.web3j:infura:$web3j_version" ) {
//        exclude group:"com.github.jnr"
//    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}